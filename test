import numpy as np
import cv2 as cv
import random
import math


img1 = cv.imread('Rainier1.png', cv.IMREAD_GRAYSCALE)  # queryImage
gaga = cv.imread('Rainier1.png')
gaga1 = cv.imread('Rainier2.png')
img2 = cv.imread('Rainier2.png', cv.IMREAD_GRAYSCALE)  # trainImage
img3 = cv.imread('Rainier3.png', cv.IMREAD_GRAYSCALE)
gaga2 = cv.imread('Rainier3.png')
img4 = cv.imread('Rainier5.png', cv.IMREAD_GRAYSCALE)
gaga3 = cv.imread('Rainier5.png')
img5 = cv.imread('Rainier4.png', cv.IMREAD_GRAYSCALE)
gaga4 = cv.imread('Rainier4.png')
img6 = cv.imread('Rainier6.png', cv.IMREAD_GRAYSCALE)
gaga5 = cv.imread('Rainier6.png')  # Initiate SIFT detector
# sift = cv.xfeatures2d.SIFT_create()
# find the keypoints and descriptors with SIFT
# kp1, des1 = sift.detectAndCompute(img1,None)
# kp2, des2 = sift.detectAndCompute(img2,None)
# BFMatcher with default params
# bf = cv.BFMatcher()
# matches = bf.knnMatch(des1,des2,k=2)
# Apply ratio test

# 1000 * 1000 matrix of int
test = np.zeros((1000, 1000, 3), np.uint8)

for i in range(len(img1)):
    for j in range(len(img1[i])):
        for k in range(3):
            test[i][j][k] = gaga[i][j][k]